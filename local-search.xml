<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux目录说明</title>
    <link href="/posts/b172e208/"/>
    <url>/posts/b172e208/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/imtyb/cdn@_/linux_dir.jpg"></p><p><strong>Linux一般相应的文件都会会放在相应的目录下，这样更有利于文件的查找。</strong></p><ul><li><code>/home</code> 用户主目录的基点，比如用户<code>user</code>的主目录就是<code>/home/user</code>，可以用<code>~</code>表示</li><li><code>/root</code> 系统管理员的主目录</li><li><code>/bin</code> 二进制可执行命令</li><li><code>/dev</code> 设备特殊文件</li><li><code>/etc</code> 系统管理和配置文件</li><li><code>/etc/rc.d</code> 启动的配置文件和脚本</li><li><code>/lib</code> 标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件</li><li><code>/sbin</code> 超级管理命令，这里存放的是系统管理员使用的管理程序</li><li><code>/tmp</code> 公共的临时文件存储点</li><li><code>/mnt</code> 系统提供这个目录是让用户临时挂载其他的文件系统</li><li><code>/lost+found</code>这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里</li><li><code>/proc</code> 虚拟的目录，是系统内存的映射。可直接访问这个目录来获取系统信息。</li><li><code>/var</code> 某些大文件的溢出区，比方说各种服务的日志文件</li><li><code>/usr</code> 最庞大的目录，要用到的应用程序和文件几乎都在这个目录</li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Maven引用本地jar</title>
    <link href="/posts/cb4606ac/"/>
    <url>/posts/cb4606ac/</url>
    
    <content type="html"><![CDATA[<p>Maven项目在不安装本地jar到仓库的情况下怎么将到项目中呢?</p><h3 id="1-直接引用本地jar"><a href="#1-直接引用本地jar" class="headerlink" title="1. 直接引用本地jar"></a>1. 直接引用本地jar</h3><p>将jar放在项目中，例如web项目就放在 <code>webapp/WEB-INF/lib</code>下面<br>然后再<code>pom.xml</code>中添加jar的依赖：</p><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>myjar<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>myjar<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>system<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">systemPath</span>&gt;</span>$&#123;project.basedir&#125;/webapp/WEB-INF/lib/myjar-1.0.0.jar<span class="hljs-tag">&lt;/<span class="hljs-name">systemPath</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></code></pre></div><p><strong>这样配置之后就不需要把jar包buildpath了，直接导入maven项目的时候，会自动识别jar包。</strong></p><h3 id="2-安装到本地仓库"><a href="#2-安装到本地仓库" class="headerlink" title="2. 安装到本地仓库"></a>2. 安装到本地仓库</h3><p>使用如下命令，安装jar到本地仓库，然后在pom中配置对应的jar坐标就可以。</p><div class="code-wrapper"><pre><code class="hljs sh">mvn install:install-file -DgroupId=com.demo -DartifactId=sdk -Dversion=1.0.7 -Dpackaging=jar -Dfile=sdk-1.0.7.jar</code></pre></div><p>参数说明:<br><code>-DgroupId</code>:对应dependency的groupId<br><code>-DartifactId</code>:对应dependency的artifactId<br><code>-Dversion</code>:对应dependency中的version<br><code>-Dpackaging</code>:安装的类型，jar或者pom<br><code>-Dfile</code>:要安装的jar文件的路径<br>安装完成后直接引入dependency即可：</p><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.demo<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>sdk<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></code></pre></div><p>安装后的jar在本地仓库中（C:\User\xxx.m2\repository）<br><img src="https://cdn.jsdelivr.net/gh/imtyb/cdn@_/article/mvm_local_jar_1.png"></p><blockquote><p><strong>PS</strong><br>maven 安装第三方jar到本地 出现 <code>The goal you specified requires a project to execute but there is no POM in this directory </code>错误<br>原因是因为操作系统的差异导致，把所有参数加上引号即可。<br>如下所示：</p></blockquote><div class="code-wrapper"><pre><code class="hljs sh">mvn install:install-file <span class="hljs-string">&quot;-DgroupId=com.demo&quot;</span> <span class="hljs-string">&quot;-DartifactId=sdk&quot;</span> <span class="hljs-string">&quot;-Dversion=1.0.7&quot;</span> <span class="hljs-string">&quot;-Dpackaging=jar&quot;</span> <span class="hljs-string">&quot;-Dfile=sdk-1.0.7.jar&quot;</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>IDE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Maven跳过单元测试</title>
    <link href="/posts/308e0eda/"/>
    <url>/posts/308e0eda/</url>
    
    <content type="html"><![CDATA[<h3 id="在命令后面加上参数-DskipTests"><a href="#在命令后面加上参数-DskipTests" class="headerlink" title="在命令后面加上参数-DskipTests"></a>在命令后面加上参数<code>-DskipTests</code></h3><p><code>-DskipTests</code>，不执行测试用例，但编译测试用例类生成相应的class文件至target/test-classes下。</p><h3 id="在命令后面加上参数-Dmaven-test-skip-true"><a href="#在命令后面加上参数-Dmaven-test-skip-true" class="headerlink" title="在命令后面加上参数-Dmaven.test.skip=true"></a>在命令后面加上参数<code>-Dmaven.test.skip=true</code></h3><p><code>-Dmaven.test.skip=true</code>，不执行测试用例，也不编译测试用例类。</p><div class="code-wrapper"><pre><code class="hljs sh">mvn package -Dmaven.test.skip=<span class="hljs-literal">true</span></code></pre></div><h3 id="也可以在pom-xml文件中修改"><a href="#也可以在pom-xml文件中修改" class="headerlink" title="也可以在pom.xml文件中修改"></a>也可以在pom.xml文件中修改</h3><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">skip</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skip</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">skip</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skip</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></code></pre></div><h3 id="使用mvn-package-DskipTests跳过单元测试"><a href="#使用mvn-package-DskipTests跳过单元测试" class="headerlink" title="使用mvn package -DskipTests跳过单元测试"></a>使用<code>mvn package -DskipTests</code>跳过单元测试</h3><p>但是会继续编译；如果没时间修改单元测试的bug，或者单元测试编译错误。使用上面的，不要用这个</p><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">skipTests</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skipTests</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>IDE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Maven</tag>
      
      <tag>单元测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Idea加快Maven构建速度</title>
    <link href="/posts/49b15ec3/"/>
    <url>/posts/49b15ec3/</url>
    
    <content type="html"><![CDATA[<h3 id="1-使用阿里云的中央仓库镜像"><a href="#1-使用阿里云的中央仓库镜像" class="headerlink" title="1. 使用阿里云的中央仓库镜像"></a>1. 使用阿里云的中央仓库镜像</h3><p>官方默认的中央仓库服务器在国外，在国内访问国外数据本来就很慢。可以使用国内阿里云的免费公共仓库镜像。</p><ol><li>创建<code>settings.xml</code>文件（如果有下载maven的话可以直接修改配置文件，如果使用的idea自带的maven内核的话，建议在用户目录下创建<code>.m2/settings.xml</code>）,赋值如下内容（主要是mirror相关内容）</li></ol><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">settings</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span><span class="hljs-tag"><span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>D://.m2/repository<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">interactiveMode</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">interactiveMode</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">offline</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">offline</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">pluginGroups</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pluginGroups</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">proxies</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">proxies</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">servers</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">servers</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>mirror<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central,jcenter<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mirror<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">profiles</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">profiles</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">activeProfiles</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">activeProfiles</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span></code></pre></div><ol start="2"><li>在idea中指定配置文件（如果配置文件放在<code>用户/xx/.m2</code>下就忽略这一步）<br><img src="https://cdn.jsdelivr.net/gh/imtyb/cdn@_/article/idea_maven/1.png"></li></ol><p>这样配置后，下载对应依赖jar的时候就是从阿里云仓库下载了</p><h3 id="2-忽略单元测试"><a href="#2-忽略单元测试" class="headerlink" title="2. 忽略单元测试"></a>2. 忽略单元测试</h3><p>在使用idea窗口中快捷操作来构建项目的时候，会默认执行单元测试<br><img src="https://cdn.jsdelivr.net/gh/imtyb/cdn@_/article/idea_maven/2.png"><br>如果我们不需要在构建的时候去执行单元测试，可以在idea配置中关闭它<br><img src="https://cdn.jsdelivr.net/gh/imtyb/cdn@_/article/idea_maven/3.png"></p><p>如果使用命令的话可以在构建命令中加入下面参数</p><div class="code-wrapper"><pre><code class="hljs ini"><span class="hljs-attr">-Dmaven.test.skip</span>=<span class="hljs-literal">true</span></code></pre></div><h3 id="3-使用多线程"><a href="#3-使用多线程" class="headerlink" title="3. 使用多线程"></a>3. 使用多线程</h3><p>如果你的项目是多模块的话，可以增加构建的线程数来加快构建。如果你的项目模块之间顺序依赖的话，多线程也是没有多大效果的。<br><img src="https://cdn.jsdelivr.net/gh/imtyb/cdn@_/article/idea_maven/4.png"></p><p>如果使用命令的话，加上如下参数</p><div class="code-wrapper"><pre><code class="hljs diff"><span class="hljs-deletion">-T 4</span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>IDE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Idea</tag>
      
      <tag>Maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
